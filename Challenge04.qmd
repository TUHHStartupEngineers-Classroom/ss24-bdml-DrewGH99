---
title: "Automated Machine Learning with H2O(II)"
subtitle: "Business Decisions with Machine Learning"
author: "Drew Gilmore"
---

```{r, echo = T , warning=FALSE, error=FALSE, message=FALSE}

library(tidyverse)
library(rsample)
library(recipes)
library(h2o)

# 1) Load the training & test dataset

backorders_tbl <- read_csv("Challenge 4/product_backorders.csv")

# 2) Specifiy the response and predictor variables

processed_tbl <- backorders_tbl %>%
  mutate_if(is.character, as.factor) 

# Split Data
set.seed(seed = 1114)
split_obj <- rsample::initial_split(processed_tbl, prop = 0.85)

# Assign training and test data
train_readable_tbl <- training(split_obj)
test_readable_tbl  <- testing(split_obj)

recipe_obj <- recipe(went_on_backorder ~ ., data = train_readable_tbl) %>%
  step_zv(all_predictors()) %>%
  prep()

train_tbl <- bake(recipe_obj, new_data = train_readable_tbl)
test_tbl  <- bake(recipe_obj, new_data = test_readable_tbl)

# 3) Run AutoML specifying the stopping criterion

h2o.init()
split_h2o <- h2o.splitFrame(as.h2o(train_tbl), ratios = c(0.85), seed = 1385)
train_h2o <- split_h2o[[1]]
valid_h2o <- split_h2o[[2]]
test_h2o  <- as.h2o(test_tbl)

# Set the target and predictors
y <- "went_on_backorder"
x <- setdiff(names(train_h2o), y)

automl_models_h2o <- h2o.automl(
  x = x,
  y = y,
  training_frame    = train_h2o,
  validation_frame  = valid_h2o,
  leaderboard_frame = test_h2o,
  max_runtime_secs  = 30,
  nfolds            = 5 
)

# 4) View the leaderboard

automl_models_h2o@leaderboard

extract_h2o_model_name_by_position <- function(h2o_leaderboard, n = 1, verbose = T) {
  
  model_name <- h2o_leaderboard %>%
    as.tibble() %>%
    slice(n) %>%
    pull(model_id)
  
  if (verbose) message(model_name)
  
  return(model_name)
  
}

automl_models_h2o@leaderboard %>% 
  extract_h2o_model_name_by_position(1) %>% 
  h2o.getModel()


# 5 & 6) Save and predicting using Leader Model

h2o.getModel("StackedEnsemble_BestOfFamily_2_AutoML_3_20240624_225721") %>% 
  h2o.saveModel(path = "h20_models/", force = TRUE)

stacked_ensemble_h2o <- h2o.loadModel("h20_models/StackedEnsemble_BestOfFamily_2_AutoML_3_20240624_225721")

predictions <- h2o.predict(stacked_ensemble_h2o, newdata = as.h2o(test_tbl))

typeof(predictions)

predictions_tbl <- predictions %>% as_tibble()

predictions_tbl %>% head(10)
```